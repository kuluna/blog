<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angular on kuluna.class</title>
    <link>https://kuluna.github.io/blog/categories/angular/</link>
    <description>Recent content in Angular on kuluna.class</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 30 Sep 2017 12:16:21 +0900</lastBuildDate>
    
	<atom:link href="https://kuluna.github.io/blog/categories/angular/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AngularのRoute Guardsにログイン情報を保持させる</title>
      <link>https://kuluna.github.io/blog/post/20170920/</link>
      <pubDate>Sat, 30 Sep 2017 12:16:21 +0900</pubDate>
      
      <guid>https://kuluna.github.io/blog/post/20170920/</guid>
      <description>SPAでログイン情報を保持するのはいつの日も悩みのタネです。 AngularにはRouting Guardsという仕組みがあり、これを使うとAn</description>
    </item>
    
    <item>
      <title>TypeScriptでpromiseをawaitしながらcatchもする</title>
      <link>https://kuluna.github.io/blog/post/20170904/</link>
      <pubDate>Mon, 04 Sep 2017 09:22:43 +0900</pubDate>
      
      <guid>https://kuluna.github.io/blog/post/20170904/</guid>
      <description>TypeScriptには戻り値がpromiseの関数をC#のTaskのようにasync/awaitで書くことができます。 これによってコールバ</description>
    </item>
    
    <item>
      <title>Reactお兄さんと宗教戦争したはなし</title>
      <link>https://kuluna.github.io/blog/post/20170809/</link>
      <pubDate>Wed, 09 Aug 2017 21:38:20 +0900</pubDate>
      
      <guid>https://kuluna.github.io/blog/post/20170809/</guid>
      <description>とある会議でReactお兄さんとフロントエンド宗教戦争(大袈裟)をしてしまいました。 会議の内容 お兄さんはPoC向けに簡単にフロントエンドのテ</description>
    </item>
    
    <item>
      <title>Webでテスト管理できるツールを作ろうとしている</title>
      <link>https://kuluna.github.io/blog/post/20170729/</link>
      <pubDate>Sat, 29 Jul 2017 18:24:32 +0900</pubDate>
      
      <guid>https://kuluna.github.io/blog/post/20170729/</guid>
      <description>GitHubで草を生やすために作っています。 kuluna/macaron: Test sweet tool 簡単にいうとテストケースをWeb上で作成し実施するWebアプリです。 テストケース テスト一</description>
    </item>
    
  </channel>
</rss>